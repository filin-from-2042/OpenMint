    Большинство других систем хранит информацию как список изменений (патчей) для файлов.
Git считает хранимые данные набором слепков небольшой файловой системы. Каждый раз, когда вы фиксируете текущую
версию проекта, Git, по сути, сохраняет слепок того, как выглядят все файлы проекта на текущий
момент.Если файл не менялся, Git не сохраняет файл снова, а делает ссылку на ранее сохранённый файл.
    В Git файлы могут находиться в одном из трёх состояний:
зафиксированном, изменённом и подготовленном. «Зафиксированный» значит, что файл уже
сохранён в вашей локальной базе. К изменённым относятся файлы, которые поменялись, но
ещё не были зафиксированы. Подготовленные файлы — это изменённые файлы, отмеченные
для включения в следующий коммит.Если рабочая версия файла совпадает с версией в каталоге Git, файл считается
зафиксированным. Если файл изменён, но добавлен в область подготовленных данных, он подготовлен. Если же
файл изменился после выгрузки из БД, но не был подготовлен, то он считается изменённым.


$ git fetch [remote-name]
Данная команда связывается с указанным удалённым проектом и забирает все те данные
проекта, которых у вас ещё нет.Извлекает все наработки,отправленные (push) на этот сервер после того, 
как вы склонировали его (или получили изменения с помощью fetch).Важно отметить, что команда fetch забирает данные в ваш 
локальный репозиторий,но не сливает их с какими-либо вашими наработками и не модифицирует то, над чем вы работаете
в данный момент. Вам необходимо вручную слить эти данные с вашими, когда вы будете готовы.

git pull
 извлекает (fetch) данные с сервера, с которого вы изначально склонировали, и автоматически
 пытается слить (merge) их с кодом, над которым вы в данный момент работаете.
 
 git push
 Эта команда срабатывает только в случае, если вы клонировали с сервера, на котором у
вас есть права на запись, и если никто другой с тех пор не выполнял команду push.


Каждый файл в вашем рабочем каталоге может находиться в одном из двух
состояний: под версионным контролем (отслеживаемые) и нет (неотслеживаемые). Отслеживаемые
файлы — это те файлы, которые были в последнем слепке состояния проекта (snapshot); они
могут быть неизмененными, измененными или подготовленными к коммиту (staged). Неотслеживаемые
файлы — это всё остальное, любые файлы в вашем рабочем каталоге, которые не входили в
ваш последний слепок состояния и не подготовлены к коммиту.

.gitignore
*.[oa] игнорировать любые файлы заканчивающиеся на .o или .a
*~ игнорировать все файлы заканчивающиеся на тильду

git diff
Если git status отвечает на вопросы слишком обобщенно, то git diff
показывает вам непосредственно добавленные и удаленные строки — собственно заплатку
(patch).